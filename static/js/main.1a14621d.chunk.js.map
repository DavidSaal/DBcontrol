{"version":3,"sources":["components/Fields/index.js","components/Fields/Fields.jsx","components/Modal/index.js","components/Modal/Modal.jsx","components/Filter/index.js","components/Filter/Filter.jsx","images/logo.png","components/Header/index.js","components/Header/Header.jsx","components/AddRow/index.js","components/AddRow/AddRow.jsx","components/Spinner/index.js","components/Spinner/Spinner.jsx","components/NewRowSkeleton/index.js","components/NewRowSkeleton/NewRowSkeleton.jsx","components/FirstLoadinSkeleton/index.js","components/FirstLoadinSkeleton/FirstLoadinSkeleton.jsx","App.js","index.js"],"names":["Fields","props","scope","Modal","className","id","tabIndex","aria-labelledby","aria-hidden","type","data-bs-dismiss","aria-label","name","value","rowToUpdate","cName","onChange","rowToUpdateFunc","pName","mpr","onClick","updatedRow","Filter","handleFilterRowValues","Header","src","logo","alt","style","width","height","AddRow","isEmpty","Object","values","newRow","every","v","addRow","setEmptyMessage","handleNewRowValues","data","rows","Spinner","color","NewRowSkeleton","index","FirstLoadinSkeleton","count","App","useState","setRows","firstLoading","setFirstLoading","newRowLoading","setNewRowLoading","deleteRowLoading","setDeleteRowLoading","setNewRow","setRowToUpdate","editRowClick","setEditRowClick","filter","setFilter","emptyMessage","inputElement","useRef","fetchData","a","fetch","res","json","useEffect","then","canvas","current","click","handleUpdateRowValues","event","target","method","headers","body","JSON","stringify","savedRow","status","alert","_id","foundIndex","findIndex","x","deleteRow","row","length","toLowerCase","includes","map","ref","data-bs-toggle","data-bs-target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a14621d.chunk.js","sourcesContent":["import Fields from \"./Fields\";\r\n\r\nexport default Fields;\r\n","import React from \"react\";\r\n\r\nconst Fields = (props) => {\r\n  return (\r\n    <tr>\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">Customer name</th>\r\n      <th scope=\"col\">Partner name</th>\r\n      <th scope=\"col\">Type of work</th>\r\n      <th scope=\"col\">NÂ° MPR file</th>\r\n      <th scope=\"col\"></th>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Fields;\r\n","import Modal from \"./Modal\";\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport Fields from \"../Fields\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"exampleModal\"\r\n      tabIndex=\"-1\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog  modal-xl modal-dialog-centered\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title fs-4\" id=\"exampleModalLabel\">\r\n              Edit Row\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"card p-3\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <Fields />\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">1</th>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"cName\"\r\n                      className=\"w-100\"\r\n                      value={props.rowToUpdate.cName}\r\n                      onChange={props.rowToUpdateFunc}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"pName\"\r\n                      className=\"w-100\"\r\n                      value={props.rowToUpdate.pName}\r\n                      onChange={props.rowToUpdateFunc}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"type\"\r\n                      className=\"w-100\"\r\n                      value={props.rowToUpdate.type}\r\n                      onChange={props.rowToUpdateFunc}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"mpr\"\r\n                      className=\"w-100\"\r\n                      value={props.rowToUpdate.mpr}\r\n                      onChange={props.rowToUpdateFunc}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-outline-dark shadow-sm fs-6 p-0 px-2\"\r\n                      data-bs-dismiss=\"modal\"\r\n                      onClick={props.updatedRow}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Filter from \"./Filter\";\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <tr>\r\n      <th>\r\n        <h4 className=\"fs-5 mb-1\">Filter</h4>\r\n      </th>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"cName\"\r\n          className=\"w-50 shadow-sm outline-success\"\r\n          onChange={props.handleFilterRowValues}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"pName\"\r\n          className=\"w-50 shadow-sm outline-success\"\r\n          onChange={props.handleFilterRowValues}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"type\"\r\n          className=\"w-50 shadow-sm outline-success\"\r\n          onChange={props.handleFilterRowValues}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"mpr\"\r\n          className=\"w-50 shadow-sm outline-success\"\r\n          onChange={props.handleFilterRowValues}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","export default __webpack_public_path__ + \"static/media/logo.3b0495ec.png\";","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport logo from \"../../images/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"text-center my-5\">\r\n      <div className=\"card shadow my-2\">\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <h1 className=\"display-3 mt-3\">Data List</h1>\r\n          <img\r\n            src={logo}\r\n            alt=\"Logo\"\r\n            style={{ width: \"100px\", height: \"90px\" }}\r\n          />\r\n        </div>\r\n        <p className=\"display-6 fs-6\">By David Saal</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import AddRow from \"./AddRow\";\r\n\r\nexport default AddRow;\r\n","import React, { useState } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst AddRow = (props) => {\r\n  var isEmpty = !Object.values(props.newRow).every((v) => v === \"\");\r\n  return (\r\n    <tr>\r\n      <th>\r\n        <button\r\n          className=\"btn btn-outline-dark shadow-sm fs-6 p-0 px-1\"\r\n          onClick={isEmpty ? props.addRow : () => props.setEmptyMessage(true)}\r\n        >\r\n          Add\r\n        </button>\r\n      </th>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"cName\"\r\n          className=\"w-50 shadow-sm outline-success\"\r\n          onChange={props.handleNewRowValues}\r\n        />\r\n      </td>\r\n\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"pName\"\r\n          className=\"w-50 shadow-sm outline-success\"\r\n          onChange={props.handleNewRowValues}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"type\"\r\n          className=\"w-50 shadow-sm outline-success\"\r\n          onChange={props.handleNewRowValues}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"mpr\"\r\n          className=\"w-50 shadow-sm outline-success\"\r\n          onChange={props.handleNewRowValues}\r\n        />\r\n      </td>\r\n      <td>\r\n        <CSVLink data={props.rows}>\r\n          <button className=\"btn btn-outline-dark shadow-sm fs-6 p-0 px-1 ms-4\">\r\n            Csv\r\n          </button>\r\n        </CSVLink>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default AddRow;\r\n","import Spinner from \"./Spinner\";\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <tr>\r\n      <td></td>\r\n      <td>\r\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={30} width={30} />\r\n      </td>\r\n      <td>\r\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={30} width={30} />\r\n      </td>\r\n      <td>\r\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={30} width={30} />\r\n      </td>\r\n      <td>\r\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={30} width={30} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import NewRowSkeleton from \"./NewRowSkeleton\";\r\n\r\nexport default NewRowSkeleton;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewRowSkeleton = (props) => {\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{props.index}</th>\r\n      <td>\r\n        <Skeleton className=\"w-75 rounded-0\" />\r\n      </td>\r\n      <td>\r\n        <Skeleton className=\"w-75 rounded-0\" />\r\n      </td>\r\n      <td>\r\n        <Skeleton className=\"w-75 rounded-0\" />\r\n      </td>\r\n      <td>\r\n        <Skeleton className=\"w-75 rounded-0\" />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default NewRowSkeleton;\r\n","import FirstLoadinSkeleton from \"./FirstLoadinSkeleton\";\r\n\r\nexport default FirstLoadinSkeleton;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst FirstLoadinSkeleton = (props) => {\r\n  return (\r\n    <tr>\r\n      <td></td>\r\n      <td>\r\n        <Skeleton className=\"w-75 rounded-0 my-2\" count={3} />\r\n      </td>\r\n      <td>\r\n        <Skeleton className=\"w-75 rounded-0 my-2\" count={3} />\r\n      </td>\r\n      <td>\r\n        <Skeleton className=\"w-75 rounded-0 my-2\" count={3} />\r\n      </td>\r\n      <td>\r\n        <Skeleton className=\"w-75 rounded-0 my-2\" count={3} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default FirstLoadinSkeleton;\r\n","import { useEffect, useRef, useState } from \"react\";\nimport Modal from \"./components/Modal\";\nimport Filter from \"./components/Filter\";\nimport Header from \"./components/Header\";\nimport AddRow from \"./components/AddRow\";\nimport Fields from \"./components/Fields\";\nimport Spinner from \"./components/Spinner\";\nimport NewRowSkeleton from \"./components/NewRowSkeleton\";\nimport FirstLoadinSkeleton from \"./components/FirstLoadinSkeleton\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [rows, setRows] = useState([]);\n  const [firstLoading, setFirstLoading] = useState(true);\n  const [newRowLoading, setNewRowLoading] = useState(false);\n  const [deleteRowLoading, setDeleteRowLoading] = useState(0);\n  const [newRow, setNewRow] = useState({\n    cName: \"\",\n    pName: \"\",\n    type: \"\",\n    mpr: \"\",\n  });\n  const [rowToUpdate, setRowToUpdate] = useState({});\n  const [editRowClick, setEditRowClick] = useState(false);\n  const [filter, setFilter] = useState({\n    name: \"\",\n    value: \"\",\n  });\n  const [emptyMessage, setEmptyMessage] = useState(false);\n  var inputElement = useRef(null);\n\n  const fetchData = async () => {\n    const res = await fetch(\"https://dbcontrol-server.herokuapp.com\");\n    const rows = await res.json();\n    return rows;\n  };\n\n  useEffect(() => {\n    fetchData().then((rows) => {\n      setFirstLoading(false);\n      setRows(rows);\n    });\n  }, []);\n\n  useEffect(() => {\n    const canvas = inputElement.current;\n    canvas && canvas.click();\n    setEditRowClick(false);\n  }, [editRowClick]);\n\n  const handleNewRowValues = (event) => {\n    setEmptyMessage(false);\n    const { name, value } = event.target;\n    setNewRow({ ...newRow, [name]: value });\n  };\n\n  const handleUpdateRowValues = (event) => {\n    const { name, value } = event.target;\n    setRowToUpdate({ ...rowToUpdate, [name]: value });\n  };\n\n  const handleFilterRowValues = (event) => {\n    const { name, value } = event.target;\n    setFilter({ name: name, value: value });\n  };\n\n  const addRow = async () => {\n    setNewRowLoading(true);\n    const res = await fetch(\"https://dbcontrol-server.herokuapp.com\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ newRow }),\n    });\n    const savedRow = await res.json();\n    if (res.status === 200) {\n      setRows([...rows, savedRow]);\n    } else {\n      res.status === 404 && alert(\"Error saving to database.\");\n    }\n    setNewRowLoading(false);\n  };\n\n  const updatedRow = async () => {\n    setDeleteRowLoading(rowToUpdate._id);\n    const res = await fetch(\"https://dbcontrol-server.herokuapp.com\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ rowToUpdate }),\n    });\n    if (res.status === 200) {\n      var foundIndex = rows.findIndex((x) => x._id === rowToUpdate._id);\n      rows[foundIndex] = rowToUpdate;\n    } else {\n      res.status === 404 && alert(\"Error saving to database.\");\n    }\n    setDeleteRowLoading(0);\n  };\n\n  const deleteRow = async (event) => {\n    setDeleteRowLoading(event.target.id);\n    const res = await fetch(\"https://dbcontrol-server.herokuapp.com\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id: event.target.id }),\n    });\n    if (res.status === 200) {\n      setRows(rows.filter((row) => row._id !== event.target.id));\n    } else {\n      res.status === 405 && alert(\"Error deleting.\");\n    }\n  };\n\n  return (\n    <div className=\"container mb-4\">\n      <Header />\n      <div className=\"card p-3 pb-0\">\n        <table className=\"table\">\n          <thead>\n            <Filter handleFilterRowValues={handleFilterRowValues} />\n            <Fields />\n          </thead>\n          <tbody>\n            {firstLoading ? (\n              <FirstLoadinSkeleton />\n            ) : rows.length > 0 ? (\n              rows\n                .filter((row) =>\n                  filter.name\n                    ? row[filter.name]\n                        .toLowerCase()\n                        .includes(filter.value.toLowerCase())\n                    : row\n                )\n                .map((row, index) =>\n                  deleteRowLoading === row._id ? (\n                    <Spinner />\n                  ) : (\n                    <tr key={row._id}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{row.cName}</td>\n                      <td>{row.pName}</td>\n                      <td>{row.type}</td>\n                      <td>{row.mpr}</td>\n                      <td>\n                        <Modal\n                          rowToUpdate={rowToUpdate}\n                          rowToUpdateFunc={handleUpdateRowValues}\n                          updatedRow={updatedRow}\n                        />\n                        <button\n                          type=\"button\"\n                          className=\"btn zoom\"\n                          aria-label=\"Edit\"\n                          onClick={() => (\n                            setRowToUpdate(row), setEditRowClick(true)\n                          )}\n                        >\n                          â\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"d-none\"\n                          ref={inputElement}\n                          id={row._id}\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#exampleModal\"\n                        ></button>\n                        <button\n                          type=\"button\"\n                          className=\"btn-close fs-8 zoom\"\n                          aria-label=\"Close\"\n                          id={row._id}\n                          onClick={deleteRow}\n                        ></button>\n                      </td>\n                    </tr>\n                  )\n                )\n            ) : (\n              <tr>\n                <td>\n                  <h4 className=\"fst-italic text-center\">(Empty List)</h4>\n                </td>\n              </tr>\n            )}\n            {newRowLoading && <NewRowSkeleton index={rows.length + 1} />}\n          </tbody>\n          <thead>\n            <AddRow\n              handleNewRowValues={handleNewRowValues}\n              newRow={newRow}\n              setEmptyMessage={setEmptyMessage}\n              addRow={addRow}\n              rows={rows}\n            />\n          </thead>\n        </table>\n        {emptyMessage && (\n          <p className=\"display-6 text-danger text-center my-0\">\n            At least one field must be filled out.\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}